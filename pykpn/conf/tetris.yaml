defaults:
  - common
  - hydra/job_logging: pykpn
    # Set the platform
  - platform: default

# Base directory
# The base directory should include 'apps' directory
tetris_base: ???

# Scenario to schedule
scenario: ???

# Folder contanings pareto configurations of all applications
mapping_dir: mappings

# Output file for scheduling
output:

# Set the scheduler. Available options: BF, BF-MEM, FAST, DAC, DAC-2, WWT15
scheduler: BF

# Set the mode. Options: single, trace.
# In single mode a scheduler is run only once to schedule all requests in
# scenario (all requests start arrive at time=0.0). In trace mode, the tool
# evaluates each request at the time of their arrival.
mode: single

# Drop schedulings close to current best by bf_drop.
bf_drop: 0.0

reschedule: true

# Dump the status of the queue every N steps
bf_dump_steps: 1000

# Set a time limit
time_limit:

# Dump the mem table
dump_mem_table: false

# Enable pruning the mem table
prune_mem_table: false

# Output file for summary
summary:

# Append to existing summary file (do not print a header)
summary_append: false

# A high-level mapper algorithm: segmentized (SEG), joint-fixed (JF),
# joint-dynamic (JD)
wwt15_type: SEG

# Determines an order, in which applications are mapped.
# Options: COST, DEADLINE, CDP.
wwt15_sorting: COST

# In segmentizes version, which points might form the segment: all points (ALL),
# or only best (if possible, not to violate deadlines) (BEST)
wwt15_seg_explore: ALL

# Enable constraints in Lagrangian relaxation solver:
# constaint on resources (R), on delay (D), on resource-delay-product (RDP).
wwt15_lr: []

# Number of iterations (rounds) in Lagrangian relaxation
wwt15_lr_rounds: 1000
